{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/login.service\";\nimport * as i3 from \"../service/locations.service\";\nimport * as i4 from \"../service/auth.service\";\nimport * as i5 from \"../service/localstorage.service\";\nimport * as i6 from \"@angular/forms\";\n\nfunction LoginComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtext(1, \"Email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \" password is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \" Password should be atleast 6 and at the max 20 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(router, route, loginService, locationService, authService, ls, formBuilder) {\n      this.router = router;\n      this.route = route;\n      this.loginService = loginService;\n      this.locationService = locationService;\n      this.authService = authService;\n      this.ls = ls;\n      this.formBuilder = formBuilder;\n      this.returnUrl = '';\n      this.loginForm = FormGroup;\n      this.errorMessage = '';\n      this.showPass = false;\n      this.edited = false;\n    }\n\n    ngOnInit() {}\n\n    createForm() {\n      this.loginForm = this.formBuilder.group({\n        email: new FormControl('', [Validators.required, Validators.email]),\n        password: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(20)])\n      });\n    } // this.returnUrl = this.route.snapshot.queryParams['/admin/dashboard'] || '/';\n\n\n    showPassword() {\n      this.showPass = !this.showPass;\n    }\n\n    onSubmit() {\n      //this.router.navigate([\"/admin/dashboard\"]);\n      // this.loginService.login(this.loginForm.controls.email.value, this.loginForm.controls.password.value).subscribe(\n      //   (data: any) => {\n      //     if (data != null) {\n      //       this.ls.setSelectedUser(data);\n      //       this.loadLocations(data[\"id\"]);\n      //       // this.router.navigate([\"/admin/dashboard\"]);\n      //     }\n      //     else {\n      //       // this.ts.showerror(\"Error\", \"Username or password is not correct.\");\n      //     }\n      //   },\n      //   error => {\n      //   }\n      // );\n      this.edited = true;\n    }\n\n    get f() {\n      return this.loginForm.controls;\n    }\n\n    get Email() {\n      return this.loginForm.get('email');\n    }\n\n    get Password() {\n      return this.loginForm.get('password');\n    }\n\n    loadLocations(id) {\n      this.locationService.getAllLocations(id).subscribe(res => {\n        if (res.length > 0) {\n          this.ls.setLocation(res);\n          this.ls.setSelectedLocation(res[0]);\n          this.router.navigate([\"/admin/dashboard\"]);\n        } else {\n          this.ls.setLocation(null);\n          this.ls.setSelectedLocation(null);\n        }\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i3.LocationsService), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i5.LocalStorageService), i0.ɵɵdirectiveInject(i6.FormBuilder));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 42,\n    vars: 5,\n    consts: [[\"id\", \"top\", 1, \"main\"], [\"data-layout\", \"container-fluid\", 1, \"container-fluid\"], [1, \"min-vh-100\"], [1, \"d-flex\"], [1, \"p-2\", \"flex-fill\", 2, \"text-align\", \"center\"], [\"src\", \"../../assets/img/logos/saudi_flag.png\", 2, \"width\", \"30px\", \"height\", \"20.01px\"], [1, \"px-2\", \"login-head-txt\"], [1, \"p-2\", \"flex-fill\"], [1, \"p-2\", \"flex-fill\", 2, \"text-align\", \"-webkit-center\", \"color\", \"#141414\"], [\"aria-label\", \".form-select-sm example\", 1, \"form-select\", \"form-select-sm\", \"login-lang\", \"login-head-txt\"], [\"selected\", \"\"], [\"value\", \"1\"], [1, \"row\", \"flex-center\", \"py-8\"], [1, \"col-sm-10\", \"col-md-8\", \"col-lg-6\", \"col-xl-5\", \"col-xxl-4\"], [\"src\", \"assets/img/logos/GarageLogo.png\", 1, \"d-flex\", \"flex-center\", 2, \"margin\", \"auto\"], [1, \"card-body\", \"p-4\", \"p-sm-5\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-4\"], [\"formControlName\", \"email\", \"id\", \"email\", \"type\", \"email\", \"placeholder\", \"Email address\", 1, \"form-control-input\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [1, \"password-container\"], [\"formControlName\", \"password\", \"ngModel\", \"Test@123\", \"id\", \"password\", \"placeholder\", \"Password\", 1, \"form-control-input\", 3, \"type\"], [\"id\", \"show-password\", 1, \"bi\", \"bi-eye-slash\", \"fa-eye\", 3, \"click\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"mb-5\"], [\"type\", \"submit\", \"name\", \"submit\", 1, \"btn-login\", \"btn-text-loginn\", 2, \"height\", \"58px\", \"font-family\", \"Inter\", \"font-weight\", \"500\"], [1, \"position-relative\", \"mt-5\"], [1, \"fp-link\"], [\"href\", \"\", 2, \"text-decoration\", \"none\", \"color\", \"#141414\"], [1, \"position-relative\", \"mt-4\"], [1, \"fp-link\", 2, \"font-weight\", \"600\"], [\"href\", \"\", 1, \"link-signup\"], [1, \"form-text\", \"text-danger\"], [1, \"alert\", \"alert-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"main\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n        i0.ɵɵelement(5, \"img\", 5);\n        i0.ɵɵelementStart(6, \"span\", 6);\n        i0.ɵɵtext(7, \"92000 6276 | Support@garage.com \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(8, \"div\", 7);\n        i0.ɵɵelementStart(9, \"div\", 8)(10, \"select\", 9)(11, \"option\", 10);\n        i0.ɵɵtext(12, \"English\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\", 11);\n        i0.ɵɵtext(14, \"Arabic\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(15, \"div\", 12)(16, \"div\", 13);\n        i0.ɵɵelement(17, \"img\", 14);\n        i0.ɵɵelementStart(18, \"div\")(19, \"div\", 15)(20, \"form\", 16);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_20_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(21, \"div\", 17);\n        i0.ɵɵelement(22, \"input\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, LoginComponent_div_23_Template, 2, 0, \"div\", 19);\n        i0.ɵɵelementStart(24, \"div\", 17)(25, \"div\", 20);\n        i0.ɵɵelement(26, \"input\", 21);\n        i0.ɵɵelementStart(27, \"i\", 22);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_i_click_27_listener() {\n          return ctx.showPassword();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(28, LoginComponent_div_28_Template, 2, 0, \"div\", 23);\n        i0.ɵɵtemplate(29, LoginComponent_div_29_Template, 2, 0, \"div\", 23);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 24)(31, \"button\", 25);\n        i0.ɵɵtext(32, \"Sign in\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(33, \"div\", 26)(34, \"div\", 27)(35, \"a\", 28);\n        i0.ɵɵtext(36, \"Forget Password?\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(37, \"div\", 29)(38, \"div\", 30);\n        i0.ɵɵtext(39, \"New to Garage? \");\n        i0.ɵɵelementStart(40, \"a\", 31);\n        i0.ɵɵtext(41, \"Sign up\");\n        i0.ɵɵelementEnd()()()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", (ctx.f.email.errors == null ? null : ctx.f.email.errors[\"required\"]) && (ctx.f.email.dirty || ctx.f.email.touched));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"type\", ctx.showPass ? \"text\" : \"password\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", (ctx.f.password.errors == null ? null : ctx.f.password.errors[\"required\"]) && (ctx.f.password.dirty || ctx.f.password.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.f.password.errors == null ? null : ctx.f.password.errors[\"minlength\"]) || (ctx.f.password.errors == null ? null : ctx.f.password.errors[\"maxlenght\"]) && (ctx.f.password.dirty || ctx.f.password.touched));\n      }\n    },\n    styles: [\"\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}