{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { GraphComponent } from '../../_directives/graph/graph.component';\nimport { TotalSalesComponent } from './total-sales/total-sales.component';\nlet DashboardComponent = class DashboardComponent {\n  // chartOptions: any =  Partial<ChartOptions>;\n  constructor(ls, integrations) {\n    this.ls = ls;\n    this.integrations = integrations;\n    this.allLocations = [];\n    this.graph = GraphComponent;\n    this.totalSales = TotalSalesComponent;\n    this.chartOptions = {\n      series: [44, 55, 41],\n      chart: {\n        width: 300,\n        height: 250,\n        type: \"donut\"\n      },\n      fill: {\n        colors: [\"#2E9C92\", \"#99C1BA\", \"#DBEAE1\"]\n      },\n      dataLabels: {\n        enabled: false\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            labels: {\n              show: false\n            }\n          }\n        }\n      },\n      responsive: [{\n        breakpoint: 480,\n        options: {\n          chart: {\n            width: 200\n          },\n          legend: {\n            position: \"bottom\",\n            show: false\n          }\n        }\n      }],\n      legend: {\n        show: false\n      }\n    };\n  }\n\n  ngAfterViewInit() {} // @ViewChild(\"chart\") chart: any = ChartComponent;\n\n\n  ngOnInit() {\n    var selectedLocation = this.ls.getSelectedLocation();\n    console.log(selectedLocation);\n    this.allLocations = this.ls.getLocation();\n    console.log(this.allLocations);\n  } // Location Dropdown\n\n\n  updateLocation(event) {\n    const target = event.target;\n    console.log(target.value);\n    let locationId = target.value;\n    let relevantLocation = this.allLocations.filter(location => location.locationID == locationId);\n    console.log(\"Relevant Location==\", relevantLocation[0]);\n    this.ls.setSelectedLocation(relevantLocation[0]);\n  }\n\n};\n\n__decorate([ViewChild(GraphComponent)], DashboardComponent.prototype, \"graph\", void 0);\n\n__decorate([ViewChild(TotalSalesComponent)], DashboardComponent.prototype, \"totalSales\", void 0);\n\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html'\n})], DashboardComponent);\nexport { DashboardComponent };","map":null,"metadata":{},"sourceType":"module"}