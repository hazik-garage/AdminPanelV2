{"ast":null,"code":"import { Component, Input, ViewChild, NgModule } from '@angular/core';\nimport { asapScheduler } from 'rxjs';\nimport ApexCharts from 'apexcharts';\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/chart/chart.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nconst _c0 = [\"chart\"];\nlet ChartComponent = /*#__PURE__*/(() => {\n  class ChartComponent {\n    constructor() {\n      this.autoUpdateSeries = true;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnInit() {\n      asapScheduler.schedule(\n      /**\n      * @return {?}\n      */\n      () => {\n        this.createElement();\n      });\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n\n    ngOnChanges(changes) {\n      asapScheduler.schedule(\n      /**\n      * @return {?}\n      */\n      () => {\n        if (this.autoUpdateSeries && Object.keys(changes).filter(\n        /**\n        * @param {?} c\n        * @return {?}\n        */\n        c => c !== \"series\").length === 0) {\n          this.updateSeries(this.series, true);\n          return;\n        }\n\n        this.createElement();\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnDestroy() {\n      if (this.chartObj) {\n        this.chartObj.destroy();\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n\n    createElement() {\n      /** @type {?} */\n      const options = {};\n\n      if (this.annotations) {\n        options.annotations = this.annotations;\n      }\n\n      if (this.chart) {\n        options.chart = this.chart;\n      }\n\n      if (this.colors) {\n        options.colors = this.colors;\n      }\n\n      if (this.dataLabels) {\n        options.dataLabels = this.dataLabels;\n      }\n\n      if (this.series) {\n        options.series = this.series;\n      }\n\n      if (this.stroke) {\n        options.stroke = this.stroke;\n      }\n\n      if (this.labels) {\n        options.labels = this.labels;\n      }\n\n      if (this.legend) {\n        options.legend = this.legend;\n      }\n\n      if (this.fill) {\n        options.fill = this.fill;\n      }\n\n      if (this.tooltip) {\n        options.tooltip = this.tooltip;\n      }\n\n      if (this.plotOptions) {\n        options.plotOptions = this.plotOptions;\n      }\n\n      if (this.responsive) {\n        options.responsive = this.responsive;\n      }\n\n      if (this.markers) {\n        options.markers = this.markers;\n      }\n\n      if (this.noData) {\n        options.noData = this.noData;\n      }\n\n      if (this.xaxis) {\n        options.xaxis = this.xaxis;\n      }\n\n      if (this.yaxis) {\n        options.yaxis = this.yaxis;\n      }\n\n      if (this.grid) {\n        options.grid = this.grid;\n      }\n\n      if (this.states) {\n        options.states = this.states;\n      }\n\n      if (this.title) {\n        options.title = this.title;\n      }\n\n      if (this.subtitle) {\n        options.subtitle = this.subtitle;\n      }\n\n      if (this.theme) {\n        options.theme = this.theme;\n      }\n\n      if (this.chartObj) {\n        this.chartObj.destroy();\n      }\n\n      this.chartObj = new ApexCharts(this.chartElement.nativeElement, options);\n      this.render();\n    }\n    /**\n     * @return {?}\n     */\n\n\n    render() {\n      return this.chartObj.render();\n    }\n    /**\n     * @param {?} options\n     * @param {?=} redrawPaths\n     * @param {?=} animate\n     * @param {?=} updateSyncedCharts\n     * @return {?}\n     */\n\n\n    updateOptions(options, redrawPaths, animate, updateSyncedCharts) {\n      return this.chartObj.updateOptions(options, redrawPaths, animate, updateSyncedCharts);\n    }\n    /**\n     * @param {?} newSeries\n     * @param {?=} animate\n     * @return {?}\n     */\n\n\n    updateSeries(newSeries, animate) {\n      this.chartObj.updateSeries(newSeries, animate);\n    }\n    /**\n     * @param {?} newSeries\n     * @param {?=} animate\n     * @return {?}\n     */\n\n\n    appendSeries(newSeries, animate) {\n      this.chartObj.appendSeries(newSeries, animate);\n    }\n    /**\n     * @param {?} newData\n     * @return {?}\n     */\n\n\n    appendData(newData) {\n      this.chartObj.appendData(newData);\n    }\n    /**\n     * @param {?} seriesName\n     * @return {?}\n     */\n\n\n    toggleSeries(seriesName) {\n      return this.chartObj.toggleSeries(seriesName);\n    }\n    /**\n     * @param {?} seriesName\n     * @return {?}\n     */\n\n\n    showSeries(seriesName) {\n      this.chartObj.showSeries(seriesName);\n    }\n    /**\n     * @param {?} seriesName\n     * @return {?}\n     */\n\n\n    hideSeries(seriesName) {\n      this.chartObj.hideSeries(seriesName);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    resetSeries() {\n      this.chartObj.resetSeries();\n    }\n    /**\n     * @param {?} min\n     * @param {?} max\n     * @return {?}\n     */\n\n\n    zoomX(min, max) {\n      this.chartObj.zoomX(min, max);\n    }\n    /**\n     * @param {?} seriesIndex\n     * @param {?=} dataPointIndex\n     * @return {?}\n     */\n\n\n    toggleDataPointSelection(seriesIndex, dataPointIndex) {\n      this.chartObj.toggleDataPointSelection(seriesIndex, dataPointIndex);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    destroy() {\n      this.chartObj.destroy();\n    }\n    /**\n     * @param {?=} localeName\n     * @return {?}\n     */\n\n\n    setLocale(localeName) {\n      this.chartObj.setLocale(localeName);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    paper() {\n      this.chartObj.paper();\n    }\n    /**\n     * @param {?} options\n     * @param {?=} pushToMemory\n     * @param {?=} context\n     * @return {?}\n     */\n\n\n    addXaxisAnnotation(options, pushToMemory, context) {\n      this.chartObj.addXaxisAnnotation(options, pushToMemory, context);\n    }\n    /**\n     * @param {?} options\n     * @param {?=} pushToMemory\n     * @param {?=} context\n     * @return {?}\n     */\n\n\n    addYaxisAnnotation(options, pushToMemory, context) {\n      this.chartObj.addYaxisAnnotation(options, pushToMemory, context);\n    }\n    /**\n     * @param {?} options\n     * @param {?=} pushToMemory\n     * @param {?=} context\n     * @return {?}\n     */\n\n\n    addPointAnnotation(options, pushToMemory, context) {\n      this.chartObj.addPointAnnotation(options, pushToMemory, context);\n    }\n    /**\n     * @param {?} id\n     * @param {?=} options\n     * @return {?}\n     */\n\n\n    removeAnnotation(id, options) {\n      this.chartObj.removeAnnotation(id, options);\n    }\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n\n\n    clearAnnotations(options) {\n      this.chartObj.clearAnnotations(options);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    dataURI() {\n      return this.chartObj.dataURI();\n    }\n\n  }\n\n  ChartComponent.ɵfac = function ChartComponent_Factory(t) {\n    return new (t || ChartComponent)();\n  };\n\n  ChartComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ChartComponent,\n    selectors: [[\"apx-chart\"]],\n    viewQuery: function ChartComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chartElement = _t.first);\n      }\n    },\n    inputs: {\n      autoUpdateSeries: \"autoUpdateSeries\",\n      chart: \"chart\",\n      annotations: \"annotations\",\n      colors: \"colors\",\n      dataLabels: \"dataLabels\",\n      series: \"series\",\n      stroke: \"stroke\",\n      labels: \"labels\",\n      legend: \"legend\",\n      markers: \"markers\",\n      noData: \"noData\",\n      fill: \"fill\",\n      tooltip: \"tooltip\",\n      plotOptions: \"plotOptions\",\n      responsive: \"responsive\",\n      xaxis: \"xaxis\",\n      yaxis: \"yaxis\",\n      grid: \"grid\",\n      states: \"states\",\n      title: \"title\",\n      subtitle: \"subtitle\",\n      theme: \"theme\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[\"chart\", \"\"]],\n    template: function ChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n      }\n    },\n    styles: [\"\"]\n  });\n  return ChartComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  ChartComponent.prototype.chart;\n  /** @type {?} */\n\n  ChartComponent.prototype.annotations;\n  /** @type {?} */\n\n  ChartComponent.prototype.colors;\n  /** @type {?} */\n\n  ChartComponent.prototype.dataLabels;\n  /** @type {?} */\n\n  ChartComponent.prototype.series;\n  /** @type {?} */\n\n  ChartComponent.prototype.stroke;\n  /** @type {?} */\n\n  ChartComponent.prototype.labels;\n  /** @type {?} */\n\n  ChartComponent.prototype.legend;\n  /** @type {?} */\n\n  ChartComponent.prototype.markers;\n  /** @type {?} */\n\n  ChartComponent.prototype.noData;\n  /** @type {?} */\n\n  ChartComponent.prototype.fill;\n  /** @type {?} */\n\n  ChartComponent.prototype.tooltip;\n  /** @type {?} */\n\n  ChartComponent.prototype.plotOptions;\n  /** @type {?} */\n\n  ChartComponent.prototype.responsive;\n  /** @type {?} */\n\n  ChartComponent.prototype.xaxis;\n  /** @type {?} */\n\n  ChartComponent.prototype.yaxis;\n  /** @type {?} */\n\n  ChartComponent.prototype.grid;\n  /** @type {?} */\n\n  ChartComponent.prototype.states;\n  /** @type {?} */\n\n  ChartComponent.prototype.title;\n  /** @type {?} */\n\n  ChartComponent.prototype.subtitle;\n  /** @type {?} */\n\n  ChartComponent.prototype.theme;\n  /** @type {?} */\n\n  ChartComponent.prototype.autoUpdateSeries;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ChartComponent.prototype.chartElement;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ChartComponent.prototype.chartObj;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ng-apexcharts.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nwindow.ApexCharts = ApexCharts;\n/** @type {?} */\n\nconst declerations = [ChartComponent];\nlet NgApexchartsModule = /*#__PURE__*/(() => {\n  class NgApexchartsModule {}\n\n  NgApexchartsModule.ɵfac = function NgApexchartsModule_Factory(t) {\n    return new (t || NgApexchartsModule)();\n  };\n\n  NgApexchartsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NgApexchartsModule\n  });\n  NgApexchartsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[]]\n  });\n  return NgApexchartsModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgApexchartsModule, {\n    declarations: [ChartComponent],\n    exports: [ChartComponent]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/model/apex-types.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// export declare class ApexCharts {\n//   constructor(el: any, options: ApexOptions);\n//   static exec(chartID: string, fn: () => void, options: any): any;\n//   static initOnLoad(): void;\n//   render(): Promise<void>;\n//   updateOptions(options: any, redrawPaths: boolean, animate: boolean, updateSyncedCharts: boolean): Promise<void>;\n//   updateSeries(newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries, animate: boolean): void;\n//   toggleSeries(seriesName: string): void;\n//   destroy(): void;\n//   addXaxisAnnotation(options: any, pushToMemory?: boolean, context?: any): void;\n//   addYaxisAnnotation(options: any, pushToMemory?: boolean, context?: any): void;\n//   addPointAnnotation(options: any, pushToMemory?: boolean, context?: any): void;\n//   addText(options: any, pushToMemory?: boolean, context?: any): void;\n//   dataURI(): void;\n// }\n\n/**\n * @record\n */\n\n\nfunction ApexOptions() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexOptions.prototype.annotations;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.chart;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.colors;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.dataLabels;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.series;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.stroke;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.labels;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.legend;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.fill;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.tooltip;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.plotOptions;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.responsive;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.markers;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.noData;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.xaxis;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.yaxis;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.grid;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.states;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.title;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.subtitle;\n  /** @type {?|undefined} */\n\n  ApexOptions.prototype.theme;\n}\n/**\n * @record\n */\n\n\nfunction ApexDropShadow() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexDropShadow.prototype.enabled;\n  /** @type {?|undefined} */\n\n  ApexDropShadow.prototype.top;\n  /** @type {?|undefined} */\n\n  ApexDropShadow.prototype.left;\n  /** @type {?|undefined} */\n\n  ApexDropShadow.prototype.blur;\n  /** @type {?|undefined} */\n\n  ApexDropShadow.prototype.opacity;\n  /** @type {?|undefined} */\n\n  ApexDropShadow.prototype.color;\n}\n/**\n * Main Chart options\n * See https://apexcharts.com/docs/options/chart/\n * @record\n */\n\n\nfunction ApexChart() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexChart.prototype.width;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.height;\n  /** @type {?} */\n\n  ApexChart.prototype.type;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.foreColor;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.fontFamily;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.background;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.offsetX;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.offsetY;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.dropShadow;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.events;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.brush;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.id;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.group;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.locales;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.defaultLocale;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.parentHeightOffset;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.redrawOnParentResize;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.redrawOnWindowResize;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.sparkline;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.stacked;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.stackType;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.toolbar;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.zoom;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.selection;\n  /** @type {?|undefined} */\n\n  ApexChart.prototype.animations;\n}\n/**\n * @record\n */\n\n\nfunction ApexStates() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexStates.prototype.normal;\n  /** @type {?|undefined} */\n\n  ApexStates.prototype.hover;\n  /** @type {?|undefined} */\n\n  ApexStates.prototype.active;\n}\n/**\n * Chart Title options\n * See https://apexcharts.com/docs/options/title/\n * @record\n */\n\n\nfunction ApexTitleSubtitle() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexTitleSubtitle.prototype.text;\n  /** @type {?|undefined} */\n\n  ApexTitleSubtitle.prototype.align;\n  /** @type {?|undefined} */\n\n  ApexTitleSubtitle.prototype.margin;\n  /** @type {?|undefined} */\n\n  ApexTitleSubtitle.prototype.offsetX;\n  /** @type {?|undefined} */\n\n  ApexTitleSubtitle.prototype.offsetY;\n  /** @type {?|undefined} */\n\n  ApexTitleSubtitle.prototype.floating;\n  /** @type {?|undefined} */\n\n  ApexTitleSubtitle.prototype.style;\n}\n/**\n * Options for the line drawn on line and area charts.\n * See https://apexcharts.com/docs/options/stroke/\n * @record\n */\n\n\nfunction ApexStroke() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexStroke.prototype.show;\n  /** @type {?|undefined} */\n\n  ApexStroke.prototype.curve;\n  /** @type {?|undefined} */\n\n  ApexStroke.prototype.lineCap;\n  /** @type {?|undefined} */\n\n  ApexStroke.prototype.colors;\n  /** @type {?|undefined} */\n\n  ApexStroke.prototype.width;\n  /** @type {?|undefined} */\n\n  ApexStroke.prototype.dashArray;\n}\n/**\n * @record\n */\n\n\nfunction ApexAnnotations() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexAnnotations.prototype.position;\n  /** @type {?|undefined} */\n\n  ApexAnnotations.prototype.yaxis;\n  /** @type {?|undefined} */\n\n  ApexAnnotations.prototype.xaxis;\n  /** @type {?|undefined} */\n\n  ApexAnnotations.prototype.points;\n  /** @type {?|undefined} */\n\n  ApexAnnotations.prototype.texts;\n  /** @type {?|undefined} */\n\n  ApexAnnotations.prototype.images;\n}\n/**\n * @record\n */\n\n\nfunction AnnotationLabel() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  AnnotationLabel.prototype.borderColor;\n  /** @type {?|undefined} */\n\n  AnnotationLabel.prototype.borderWidth;\n  /** @type {?|undefined} */\n\n  AnnotationLabel.prototype.borderRadius;\n  /** @type {?|undefined} */\n\n  AnnotationLabel.prototype.text;\n  /** @type {?|undefined} */\n\n  AnnotationLabel.prototype.textAnchor;\n  /** @type {?|undefined} */\n\n  AnnotationLabel.prototype.offsetX;\n  /** @type {?|undefined} */\n\n  AnnotationLabel.prototype.offsetY;\n  /** @type {?|undefined} */\n\n  AnnotationLabel.prototype.style;\n  /** @type {?|undefined} */\n\n  AnnotationLabel.prototype.position;\n  /** @type {?|undefined} */\n\n  AnnotationLabel.prototype.orientation;\n}\n/**\n * @record\n */\n\n\nfunction AnnotationStyle() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  AnnotationStyle.prototype.background;\n  /** @type {?|undefined} */\n\n  AnnotationStyle.prototype.color;\n  /** @type {?|undefined} */\n\n  AnnotationStyle.prototype.fontSize;\n  /** @type {?|undefined} */\n\n  AnnotationStyle.prototype.fontFamily;\n  /** @type {?|undefined} */\n\n  AnnotationStyle.prototype.fontWeight;\n  /** @type {?|undefined} */\n\n  AnnotationStyle.prototype.cssClass;\n  /** @type {?|undefined} */\n\n  AnnotationStyle.prototype.padding;\n}\n/**\n * @record\n */\n\n\nfunction XAxisAnnotations() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  XAxisAnnotations.prototype.x;\n  /** @type {?|undefined} */\n\n  XAxisAnnotations.prototype.x2;\n  /** @type {?|undefined} */\n\n  XAxisAnnotations.prototype.strokeDashArray;\n  /** @type {?|undefined} */\n\n  XAxisAnnotations.prototype.fillColor;\n  /** @type {?|undefined} */\n\n  XAxisAnnotations.prototype.borderColor;\n  /** @type {?|undefined} */\n\n  XAxisAnnotations.prototype.borderWidth;\n  /** @type {?|undefined} */\n\n  XAxisAnnotations.prototype.opacity;\n  /** @type {?|undefined} */\n\n  XAxisAnnotations.prototype.offsetX;\n  /** @type {?|undefined} */\n\n  XAxisAnnotations.prototype.offsetY;\n  /** @type {?|undefined} */\n\n  XAxisAnnotations.prototype.label;\n}\n/**\n * @record\n */\n\n\nfunction YAxisAnnotations() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  YAxisAnnotations.prototype.y;\n  /** @type {?|undefined} */\n\n  YAxisAnnotations.prototype.y2;\n  /** @type {?|undefined} */\n\n  YAxisAnnotations.prototype.strokeDashArray;\n  /** @type {?|undefined} */\n\n  YAxisAnnotations.prototype.fillColor;\n  /** @type {?|undefined} */\n\n  YAxisAnnotations.prototype.borderColor;\n  /** @type {?|undefined} */\n\n  YAxisAnnotations.prototype.borderWidth;\n  /** @type {?|undefined} */\n\n  YAxisAnnotations.prototype.opacity;\n  /** @type {?|undefined} */\n\n  YAxisAnnotations.prototype.offsetX;\n  /** @type {?|undefined} */\n\n  YAxisAnnotations.prototype.offsetY;\n  /** @type {?|undefined} */\n\n  YAxisAnnotations.prototype.width;\n  /** @type {?|undefined} */\n\n  YAxisAnnotations.prototype.yAxisIndex;\n  /** @type {?|undefined} */\n\n  YAxisAnnotations.prototype.label;\n}\n/**\n * @record\n */\n\n\nfunction PointAnnotations() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  PointAnnotations.prototype.x;\n  /** @type {?|undefined} */\n\n  PointAnnotations.prototype.y;\n  /** @type {?|undefined} */\n\n  PointAnnotations.prototype.yAxisIndex;\n  /** @type {?|undefined} */\n\n  PointAnnotations.prototype.seriesIndex;\n  /** @type {?|undefined} */\n\n  PointAnnotations.prototype.marker;\n  /** @type {?|undefined} */\n\n  PointAnnotations.prototype.label;\n  /** @type {?|undefined} */\n\n  PointAnnotations.prototype.image;\n}\n/**\n * @record\n */\n\n\nfunction ImageAnnotations() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ImageAnnotations.prototype.path;\n  /** @type {?|undefined} */\n\n  ImageAnnotations.prototype.x;\n  /** @type {?|undefined} */\n\n  ImageAnnotations.prototype.y;\n  /** @type {?|undefined} */\n\n  ImageAnnotations.prototype.width;\n  /** @type {?|undefined} */\n\n  ImageAnnotations.prototype.height;\n  /** @type {?|undefined} */\n\n  ImageAnnotations.prototype.appendTo;\n}\n/**\n * @record\n */\n\n\nfunction TextAnnotations() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  TextAnnotations.prototype.x;\n  /** @type {?|undefined} */\n\n  TextAnnotations.prototype.y;\n  /** @type {?|undefined} */\n\n  TextAnnotations.prototype.text;\n  /** @type {?|undefined} */\n\n  TextAnnotations.prototype.textAnchor;\n  /** @type {?|undefined} */\n\n  TextAnnotations.prototype.foreColor;\n  /** @type {?|undefined} */\n\n  TextAnnotations.prototype.fontSize;\n  /** @type {?|undefined} */\n\n  TextAnnotations.prototype.fontFamily;\n  /** @type {?|undefined} */\n\n  TextAnnotations.prototype.fontWeight;\n  /** @type {?|undefined} */\n\n  TextAnnotations.prototype.appendTo;\n  /** @type {?|undefined} */\n\n  TextAnnotations.prototype.backgroundColor;\n  /** @type {?|undefined} */\n\n  TextAnnotations.prototype.borderColor;\n  /** @type {?|undefined} */\n\n  TextAnnotations.prototype.borderRadius;\n  /** @type {?|undefined} */\n\n  TextAnnotations.prototype.borderWidth;\n  /** @type {?|undefined} */\n\n  TextAnnotations.prototype.paddingLeft;\n  /** @type {?|undefined} */\n\n  TextAnnotations.prototype.paddingRight;\n  /** @type {?|undefined} */\n\n  TextAnnotations.prototype.paddingTop;\n  /** @type {?|undefined} */\n\n  TextAnnotations.prototype.paddingBottom;\n}\n/**\n * Options for localization.\n * See https://apexcharts.com/docs/options/chart/locales\n * @record\n */\n\n\nfunction ApexLocale() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexLocale.prototype.name;\n  /** @type {?|undefined} */\n\n  ApexLocale.prototype.options;\n}\n/**\n * PlotOptions for specifying chart-type-specific configuration.\n * See https://apexcharts.com/docs/options/plotoptions/bar/\n * @record\n */\n\n\nfunction ApexPlotOptions() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexPlotOptions.prototype.area;\n  /** @type {?|undefined} */\n\n  ApexPlotOptions.prototype.bar;\n  /** @type {?|undefined} */\n\n  ApexPlotOptions.prototype.bubble;\n  /** @type {?|undefined} */\n\n  ApexPlotOptions.prototype.candlestick;\n  /** @type {?|undefined} */\n\n  ApexPlotOptions.prototype.boxPlot;\n  /** @type {?|undefined} */\n\n  ApexPlotOptions.prototype.heatmap;\n  /** @type {?|undefined} */\n\n  ApexPlotOptions.prototype.treemap;\n  /** @type {?|undefined} */\n\n  ApexPlotOptions.prototype.pie;\n  /** @type {?|undefined} */\n\n  ApexPlotOptions.prototype.polarArea;\n  /** @type {?|undefined} */\n\n  ApexPlotOptions.prototype.radar;\n  /** @type {?|undefined} */\n\n  ApexPlotOptions.prototype.radialBar;\n}\n/**\n * @record\n */\n\n\nfunction ApexFill() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexFill.prototype.colors;\n  /** @type {?|undefined} */\n\n  ApexFill.prototype.opacity;\n  /** @type {?|undefined} */\n\n  ApexFill.prototype.type;\n  /** @type {?|undefined} */\n\n  ApexFill.prototype.gradient;\n  /** @type {?|undefined} */\n\n  ApexFill.prototype.image;\n  /** @type {?|undefined} */\n\n  ApexFill.prototype.pattern;\n}\n/**\n * Chart Legend configuration options.\n * See https://apexcharts.com/docs/options/legend/\n * @record\n */\n\n\nfunction ApexLegend() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexLegend.prototype.show;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.showForSingleSeries;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.showForNullSeries;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.showForZeroSeries;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.floating;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.inverseOrder;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.position;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.horizontalAlign;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.fontSize;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.fontFamily;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.fontWeight;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.width;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.height;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.offsetX;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.offsetY;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.textAnchor;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.customLegendItems;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.labels;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.markers;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.itemMargin;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.containerMargin;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.onItemClick;\n  /** @type {?|undefined} */\n\n  ApexLegend.prototype.onItemHover;\n  /**\n   * @param {?} legendName\n   * @param {?=} opts\n   * @return {?}\n   */\n\n  ApexLegend.prototype.formatter = function (legendName, opts) {};\n  /**\n   * @param {?} legendName\n   * @param {?=} opts\n   * @return {?}\n   */\n\n\n  ApexLegend.prototype.tooltipHoverFormatter = function (legendName, opts) {};\n}\n/**\n * Chart Datalabels options\n * See https://apexcharts.com/docs/options/datalabels/\n * @record\n */\n\n\nfunction ApexDataLabels() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexDataLabels.prototype.enabled;\n  /** @type {?|undefined} */\n\n  ApexDataLabels.prototype.enabledOnSeries;\n  /** @type {?|undefined} */\n\n  ApexDataLabels.prototype.textAnchor;\n  /** @type {?|undefined} */\n\n  ApexDataLabels.prototype.distributed;\n  /** @type {?|undefined} */\n\n  ApexDataLabels.prototype.offsetX;\n  /** @type {?|undefined} */\n\n  ApexDataLabels.prototype.offsetY;\n  /** @type {?|undefined} */\n\n  ApexDataLabels.prototype.style;\n  /** @type {?|undefined} */\n\n  ApexDataLabels.prototype.background;\n  /** @type {?|undefined} */\n\n  ApexDataLabels.prototype.dropShadow;\n  /**\n   * @param {?} val\n   * @param {?=} opts\n   * @return {?}\n   */\n\n  ApexDataLabels.prototype.formatter = function (val, opts) {};\n}\n/**\n * @record\n */\n\n\nfunction ApexResponsive() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexResponsive.prototype.breakpoint;\n  /** @type {?|undefined} */\n\n  ApexResponsive.prototype.options;\n}\n/**\n * Chart Tooltip options\n * See https://apexcharts.com/docs/options/tooltip/\n * @record\n */\n\n\nfunction ApexTooltip() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexTooltip.prototype.enabled;\n  /** @type {?|undefined} */\n\n  ApexTooltip.prototype.enabledOnSeries;\n  /** @type {?|undefined} */\n\n  ApexTooltip.prototype.shared;\n  /** @type {?|undefined} */\n\n  ApexTooltip.prototype.followCursor;\n  /** @type {?|undefined} */\n\n  ApexTooltip.prototype.intersect;\n  /** @type {?|undefined} */\n\n  ApexTooltip.prototype.inverseOrder;\n  /** @type {?|undefined} */\n\n  ApexTooltip.prototype.custom;\n  /** @type {?|undefined} */\n\n  ApexTooltip.prototype.fillSeriesColor;\n  /** @type {?|undefined} */\n\n  ApexTooltip.prototype.theme;\n  /** @type {?|undefined} */\n\n  ApexTooltip.prototype.style;\n  /** @type {?|undefined} */\n\n  ApexTooltip.prototype.onDatasetHover;\n  /** @type {?|undefined} */\n\n  ApexTooltip.prototype.x;\n  /** @type {?|undefined} */\n\n  ApexTooltip.prototype.y;\n  /** @type {?|undefined} */\n\n  ApexTooltip.prototype.z;\n  /** @type {?|undefined} */\n\n  ApexTooltip.prototype.marker;\n  /** @type {?|undefined} */\n\n  ApexTooltip.prototype.items;\n  /** @type {?|undefined} */\n\n  ApexTooltip.prototype.fixed;\n}\n/**\n * X Axis options\n * See https://apexcharts.com/docs/options/xaxis/\n * @record\n */\n\n\nfunction ApexXAxis() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexXAxis.prototype.type;\n  /** @type {?|undefined} */\n\n  ApexXAxis.prototype.categories;\n  /** @type {?|undefined} */\n\n  ApexXAxis.prototype.overwriteCategories;\n  /** @type {?|undefined} */\n\n  ApexXAxis.prototype.offsetX;\n  /** @type {?|undefined} */\n\n  ApexXAxis.prototype.offsetY;\n  /** @type {?|undefined} */\n\n  ApexXAxis.prototype.sorted;\n  /** @type {?|undefined} */\n\n  ApexXAxis.prototype.labels;\n  /** @type {?|undefined} */\n\n  ApexXAxis.prototype.axisBorder;\n  /** @type {?|undefined} */\n\n  ApexXAxis.prototype.axisTicks;\n  /** @type {?|undefined} */\n\n  ApexXAxis.prototype.tickPlacement;\n  /** @type {?|undefined} */\n\n  ApexXAxis.prototype.tickAmount;\n  /** @type {?|undefined} */\n\n  ApexXAxis.prototype.min;\n  /** @type {?|undefined} */\n\n  ApexXAxis.prototype.max;\n  /** @type {?|undefined} */\n\n  ApexXAxis.prototype.range;\n  /** @type {?|undefined} */\n\n  ApexXAxis.prototype.floating;\n  /** @type {?|undefined} */\n\n  ApexXAxis.prototype.decimalsInFloat;\n  /** @type {?|undefined} */\n\n  ApexXAxis.prototype.position;\n  /** @type {?|undefined} */\n\n  ApexXAxis.prototype.title;\n  /** @type {?|undefined} */\n\n  ApexXAxis.prototype.crosshairs;\n  /** @type {?|undefined} */\n\n  ApexXAxis.prototype.tooltip;\n}\n/**\n * Y Axis options\n * See https://apexcharts.com/docs/options/yaxis/\n * @record\n */\n\n\nfunction ApexYAxis() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexYAxis.prototype.show;\n  /** @type {?|undefined} */\n\n  ApexYAxis.prototype.showAlways;\n  /** @type {?|undefined} */\n\n  ApexYAxis.prototype.showForNullSeries;\n  /** @type {?|undefined} */\n\n  ApexYAxis.prototype.seriesName;\n  /** @type {?|undefined} */\n\n  ApexYAxis.prototype.opposite;\n  /** @type {?|undefined} */\n\n  ApexYAxis.prototype.reversed;\n  /** @type {?|undefined} */\n\n  ApexYAxis.prototype.logarithmic;\n  /** @type {?|undefined} */\n\n  ApexYAxis.prototype.tickAmount;\n  /** @type {?|undefined} */\n\n  ApexYAxis.prototype.forceNiceScale;\n  /** @type {?|undefined} */\n\n  ApexYAxis.prototype.min;\n  /** @type {?|undefined} */\n\n  ApexYAxis.prototype.max;\n  /** @type {?|undefined} */\n\n  ApexYAxis.prototype.floating;\n  /** @type {?|undefined} */\n\n  ApexYAxis.prototype.decimalsInFloat;\n  /** @type {?|undefined} */\n\n  ApexYAxis.prototype.labels;\n  /** @type {?|undefined} */\n\n  ApexYAxis.prototype.axisBorder;\n  /** @type {?|undefined} */\n\n  ApexYAxis.prototype.axisTicks;\n  /** @type {?|undefined} */\n\n  ApexYAxis.prototype.title;\n  /** @type {?|undefined} */\n\n  ApexYAxis.prototype.crosshairs;\n  /** @type {?|undefined} */\n\n  ApexYAxis.prototype.tooltip;\n}\n/**\n * Plot X and Y grid options\n * See https://apexcharts.com/docs/options/grid/\n * @record\n */\n\n\nfunction ApexGrid() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexGrid.prototype.show;\n  /** @type {?|undefined} */\n\n  ApexGrid.prototype.borderColor;\n  /** @type {?|undefined} */\n\n  ApexGrid.prototype.strokeDashArray;\n  /** @type {?|undefined} */\n\n  ApexGrid.prototype.position;\n  /** @type {?|undefined} */\n\n  ApexGrid.prototype.xaxis;\n  /** @type {?|undefined} */\n\n  ApexGrid.prototype.yaxis;\n  /** @type {?|undefined} */\n\n  ApexGrid.prototype.row;\n  /** @type {?|undefined} */\n\n  ApexGrid.prototype.column;\n  /** @type {?|undefined} */\n\n  ApexGrid.prototype.padding;\n}\n/**\n * @record\n */\n\n\nfunction ApexTheme() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexTheme.prototype.mode;\n  /** @type {?|undefined} */\n\n  ApexTheme.prototype.palette;\n  /** @type {?|undefined} */\n\n  ApexTheme.prototype.monochrome;\n}\n/**\n * @record\n */\n\n\nfunction ApexDiscretePoint() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexDiscretePoint.prototype.seriesIndex;\n  /** @type {?|undefined} */\n\n  ApexDiscretePoint.prototype.dataPointIndex;\n  /** @type {?|undefined} */\n\n  ApexDiscretePoint.prototype.fillColor;\n  /** @type {?|undefined} */\n\n  ApexDiscretePoint.prototype.strokeColor;\n  /** @type {?|undefined} */\n\n  ApexDiscretePoint.prototype.size;\n}\n/**\n * @record\n */\n\n\nfunction ApexMarkers() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexMarkers.prototype.size;\n  /** @type {?|undefined} */\n\n  ApexMarkers.prototype.width;\n  /** @type {?|undefined} */\n\n  ApexMarkers.prototype.height;\n  /** @type {?|undefined} */\n\n  ApexMarkers.prototype.colors;\n  /** @type {?|undefined} */\n\n  ApexMarkers.prototype.strokeColors;\n  /** @type {?|undefined} */\n\n  ApexMarkers.prototype.strokeWidth;\n  /** @type {?|undefined} */\n\n  ApexMarkers.prototype.strokeOpacity;\n  /** @type {?|undefined} */\n\n  ApexMarkers.prototype.strokeDashArray;\n  /** @type {?|undefined} */\n\n  ApexMarkers.prototype.fillOpacity;\n  /** @type {?|undefined} */\n\n  ApexMarkers.prototype.discrete;\n  /** @type {?|undefined} */\n\n  ApexMarkers.prototype.shape;\n  /** @type {?|undefined} */\n\n  ApexMarkers.prototype.radius;\n  /** @type {?|undefined} */\n\n  ApexMarkers.prototype.offsetX;\n  /** @type {?|undefined} */\n\n  ApexMarkers.prototype.offsetY;\n  /** @type {?|undefined} */\n\n  ApexMarkers.prototype.showNullDataPoints;\n  /** @type {?|undefined} */\n\n  ApexMarkers.prototype.hover;\n  /**\n   * @param {?=} e\n   * @return {?}\n   */\n\n  ApexMarkers.prototype.onClick = function (e) {};\n  /**\n   * @param {?=} e\n   * @return {?}\n   */\n\n\n  ApexMarkers.prototype.onDblClick = function (e) {};\n}\n/**\n * @record\n */\n\n\nfunction ApexNoData() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ApexNoData.prototype.text;\n  /** @type {?|undefined} */\n\n  ApexNoData.prototype.align;\n  /** @type {?|undefined} */\n\n  ApexNoData.prototype.verticalAlign;\n  /** @type {?|undefined} */\n\n  ApexNoData.prototype.offsetX;\n  /** @type {?|undefined} */\n\n  ApexNoData.prototype.offsetY;\n  /** @type {?|undefined} */\n\n  ApexNoData.prototype.style;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng-apexcharts.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { ChartComponent, NgApexchartsModule }; //# sourceMappingURL=ng-apexcharts.js.map","map":null,"metadata":{},"sourceType":"module"}