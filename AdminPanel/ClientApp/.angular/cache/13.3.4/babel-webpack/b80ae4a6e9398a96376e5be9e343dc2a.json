{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let LoginService = /*#__PURE__*/(() => {\n  class LoginService {\n    constructor(http, baseUrl) {\n      this.http = http;\n      this.BaseUrl = '';\n      this.BaseUrl = baseUrl;\n      this.currentUserSubject = new BehaviorSubject(JSON.parse(sessionStorage.getItem('authenticatedUser') || '{}'));\n      this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    get currentUserValue() {\n      return this.currentUserSubject.value;\n    }\n\n    loginuser() {\n      return this.http.get(`api/users/login`); //return this.http.get<any[]>(`api/Users/Login/${email}/${password}`);\n    }\n\n    login(email, password) {\n      return this.http.get(`/api/login/${email}/${password}`);\n    }\n\n  }\n\n  LoginService.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n  };\n\n  LoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n  return LoginService;\n})();","map":null,"metadata":{},"sourceType":"module"}