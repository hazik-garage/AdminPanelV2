{"ast":null,"code":"import { finalize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./loader.service\";\nexport let LoadingInterceptor = /*#__PURE__*/(() => {\n  class LoadingInterceptor {\n    constructor(loadingService) {\n      this.loadingService = loadingService;\n      this.totalRequests = 0;\n    }\n\n    intercept(request, next) {\n      console.log('caught');\n      this.totalRequests++;\n      this.loadingService.setLoading(true);\n      return next.handle(request).pipe(finalize(() => {\n        this.totalRequests--;\n\n        if (this.totalRequests == 0) {\n          this.loadingService.setLoading(false);\n        }\n      }));\n    }\n\n  }\n\n  LoadingInterceptor.ɵfac = function LoadingInterceptor_Factory(t) {\n    return new (t || LoadingInterceptor)(i0.ɵɵinject(i1.LoaderService));\n  };\n\n  LoadingInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoadingInterceptor,\n    factory: LoadingInterceptor.ɵfac\n  });\n  return LoadingInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}